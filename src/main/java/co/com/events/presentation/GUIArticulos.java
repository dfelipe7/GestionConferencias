package co.com.events.presentation;

import co.com.events.domain.entities.Articulo;
import co.com.events.domain.entities.Evento;
import co.com.events.service.ArticuloService;
import co.com.events.service.CategoryService;
import co.com.events.service.EventService;
import java.awt.Desktop;
import java.io.File;
import java.io.IOException;
import javax.swing.ImageIcon;
import javax.swing.JFileChooser;

import javax.swing.JFileChooser;
import java.io.File;
import javax.swing.JOptionPane;
import javax.swing.filechooser.FileNameExtensionFilter;

/**
 *
 * @author Libardo Pantoja, Julio A. Hurtado
 */
public class GUIArticulos extends javax.swing.JFrame {

    private ArticuloService articuloService;

    private boolean addOption;
    private File selectedPdfFile;

    /**
     * Creates new form GUIProducts
     */
    public GUIArticulos(ArticuloService articuloService) {
        initComponents();
        this.articuloService = articuloService;
    
        stateInitial();

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jFileChooser1 = new javax.swing.JFileChooser();
        pnlSouth = new javax.swing.JPanel();
        btnNuevo = new javax.swing.JButton();
        btnEditar = new javax.swing.JButton();
        btnSave = new javax.swing.JButton();
        btnCancelar = new javax.swing.JButton();
        btnEliminar = new javax.swing.JButton();
        btnFind = new javax.swing.JButton();
        btnCerrar = new javax.swing.JButton();
        btnCategorias = new javax.swing.JButton();
        pnlCenter = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        txtId = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        txtTitulo = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        txtResumen = new javax.swing.JTextArea();
        txtPalabras = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        txtArchivo = new javax.swing.JTextField();
        btnCargarArchivo = new javax.swing.JButton();
        jLabel4 = new javax.swing.JLabel();
        txtIdAutor = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();
        txtIdConferencia = new javax.swing.JTextField();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Productos");

        pnlSouth.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));

        btnNuevo.setText("Nuevo");
        btnNuevo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnNuevoActionPerformed(evt);
            }
        });
        pnlSouth.add(btnNuevo);

        btnEditar.setText("Editar");
        btnEditar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEditarActionPerformed(evt);
            }
        });
        pnlSouth.add(btnEditar);

        btnSave.setText("Grabar");
        btnSave.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSaveActionPerformed(evt);
            }
        });
        pnlSouth.add(btnSave);

        btnCancelar.setText("Cancelar");
        btnCancelar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCancelarActionPerformed(evt);
            }
        });
        pnlSouth.add(btnCancelar);

        btnEliminar.setText("Eliminar");
        btnEliminar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEliminarActionPerformed(evt);
            }
        });
        pnlSouth.add(btnEliminar);

        btnFind.setText("Buscar");
        btnFind.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnFindActionPerformed(evt);
            }
        });
        pnlSouth.add(btnFind);

        btnCerrar.setText("Cerrar");
        btnCerrar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCerrarActionPerformed(evt);
            }
        });
        pnlSouth.add(btnCerrar);

        btnCategorias.setText("Categorias");
        btnCategorias.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCategoriasActionPerformed(evt);
            }
        });
        pnlSouth.add(btnCategorias);

        getContentPane().add(pnlSouth, java.awt.BorderLayout.SOUTH);

        pnlCenter.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel1.setText("*Id:");

        txtId.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                txtIdFocusLost(evt);
            }
        });

        jLabel2.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel2.setText("*Titulo:");

        jLabel3.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel3.setText("Resumen:");

        txtResumen.setColumns(20);
        txtResumen.setRows(5);
        jScrollPane1.setViewportView(txtResumen);

        txtPalabras.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtPalabrasActionPerformed(evt);
            }
        });

        jLabel5.setText("Palabras Clave");

        txtArchivo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtArchivoActionPerformed(evt);
            }
        });

        btnCargarArchivo.setText("Cargar Archivo");
        btnCargarArchivo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCargarArchivoActionPerformed(evt);
            }
        });

        jLabel4.setText("Id autor:");

        txtIdAutor.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtIdAutorActionPerformed(evt);
            }
        });

        jLabel6.setText("Id conferencia:");

        txtIdConferencia.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtIdConferenciaActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout pnlCenterLayout = new javax.swing.GroupLayout(pnlCenter);
        pnlCenter.setLayout(pnlCenterLayout);
        pnlCenterLayout.setHorizontalGroup(
            pnlCenterLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pnlCenterLayout.createSequentialGroup()
                .addContainerGap(10, Short.MAX_VALUE)
                .addGroup(pnlCenterLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(pnlCenterLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                        .addGroup(javax.swing.GroupLayout.Alignment.LEADING, pnlCenterLayout.createSequentialGroup()
                            .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 318, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addComponent(txtTitulo))
                        .addGroup(javax.swing.GroupLayout.Alignment.LEADING, pnlCenterLayout.createSequentialGroup()
                            .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 318, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addComponent(txtId, javax.swing.GroupLayout.PREFERRED_SIZE, 318, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(pnlCenterLayout.createSequentialGroup()
                        .addGroup(pnlCenterLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(pnlCenterLayout.createSequentialGroup()
                                .addGroup(pnlCenterLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 318, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel5))
                                .addGap(6, 6, 6))
                            .addGroup(pnlCenterLayout.createSequentialGroup()
                                .addComponent(btnCargarArchivo)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED))
                            .addGroup(pnlCenterLayout.createSequentialGroup()
                                .addComponent(jLabel4)
                                .addGap(21, 21, 21)))
                        .addGroup(pnlCenterLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(pnlCenterLayout.createSequentialGroup()
                                .addGap(6, 6, 6)
                                .addComponent(txtIdAutor, javax.swing.GroupLayout.PREFERRED_SIZE, 127, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(jLabel6)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(txtIdConferencia))
                            .addComponent(txtPalabras, javax.swing.GroupLayout.DEFAULT_SIZE, 324, Short.MAX_VALUE)
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 318, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtArchivo))))
                .addGap(17, 17, 17))
        );
        pnlCenterLayout.setVerticalGroup(
            pnlCenterLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlCenterLayout.createSequentialGroup()
                .addGap(1, 1, 1)
                .addGroup(pnlCenterLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(pnlCenterLayout.createSequentialGroup()
                        .addGap(6, 6, 6)
                        .addComponent(txtId, javax.swing.GroupLayout.DEFAULT_SIZE, 34, Short.MAX_VALUE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(pnlCenterLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtTitulo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(pnlCenterLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                    .addComponent(jLabel3, javax.swing.GroupLayout.DEFAULT_SIZE, 23, Short.MAX_VALUE))
                .addGap(18, 18, 18)
                .addGroup(pnlCenterLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel5)
                    .addComponent(txtPalabras, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(19, 19, 19)
                .addGroup(pnlCenterLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtArchivo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnCargarArchivo))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(pnlCenterLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(txtIdAutor, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel6)
                    .addComponent(txtIdConferencia, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(26, 26, 26))
        );

        getContentPane().add(pnlCenter, java.awt.BorderLayout.CENTER);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnNuevoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnNuevoActionPerformed
         stateNew();
        txtTitulo.requestFocus();
        addOption = true;
    }//GEN-LAST:event_btnNuevoActionPerformed

    private void btnCancelarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCancelarActionPerformed
        stateInitial();
        cleanControls();
    }//GEN-LAST:event_btnCancelarActionPerformed

    private void btnCerrarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCerrarActionPerformed
        this.dispose();
    }//GEN-LAST:event_btnCerrarActionPerformed

    private void btnSaveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSaveActionPerformed
        if (txtTitulo.getText().trim().equals("")) {
            Messages.showMessageDialog("Debe ingresar el nombre del producto", "Atención");
            txtTitulo.requestFocus();
            return;
        }
        if (addOption) {
            //Agregar
            addArticulo();

        } else {
            //Editar
            editArticulo();
        }

    }//GEN-LAST:event_btnSaveActionPerformed

    private void btnEditarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEditarActionPerformed
        addOption = false;
        stateEdit();
        txtId.requestFocus();
    }//GEN-LAST:event_btnEditarActionPerformed

    private void txtIdFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtIdFocusLost
   if (txtId.getText().trim().isEmpty()) {
            return;
        }

        Long articuloId;
        try {
            articuloId = Long.parseLong(txtId.getText().trim());
        } catch (NumberFormatException e) {
            JOptionPane.showMessageDialog(this, "El ID del artículo debe ser un número válido.", "Error", JOptionPane.ERROR_MESSAGE);
            txtId.setText("");
            txtId.requestFocus();
            return;
        }

        String outputFilePath = "temp_article_" + articuloId + ".pdf";
        Articulo articulo = articuloService.findArticuloById(articuloId, outputFilePath);

        if (articulo == null) {
            JOptionPane.showMessageDialog(this, "El identificador del artículo no existe", "Error", JOptionPane.ERROR_MESSAGE);
            txtId.setText("");
            txtId.requestFocus();
        } else {
            txtTitulo.setText(articulo.getTitulo());
            txtResumen.setText(articulo.getResumen());
            txtPalabras.setText(articulo.getPalabrasClave());
            txtIdAutor.setText(articulo.getAutorId() != null ? articulo.getAutorId().toString() : "");
            txtIdConferencia.setText(articulo.getConferenciaId() != null ? articulo.getConferenciaId().toString() : "");
            txtArchivo.setText(outputFilePath);
            selectedPdfFile = new File(outputFilePath);
            

            // Opcional: Mostrar el PDF
            try {
                Desktop.getDesktop().open(selectedPdfFile);
            } catch (IOException e) {
                e.printStackTrace();
                JOptionPane.showMessageDialog(this, "No se pudo abrir el archivo PDF", "Error", JOptionPane.ERROR_MESSAGE);
            }
        }
    }//GEN-LAST:event_txtIdFocusLost

    private void btnEliminarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEliminarActionPerformed
        String id = txtId.getText().trim();
        if (id.equals("")) {
            Messages.showMessageDialog("Debe buscar el producto a eliminar", "Atención");
            txtId.requestFocus();
            return;
        }
        Long articuloId = Long.parseLong(id);
        if (Messages.showConfirmDialog("Está seguro que desea eliminar este producto?", "Confirmación") == JOptionPane.YES_NO_OPTION) {
            if (articuloService.deleteArticulo(articuloId)) {
                Messages.showMessageDialog("Producto eliminado con éxito", "Atención");
                stateInitial();
                cleanControls();
            }
        }
    }//GEN-LAST:event_btnEliminarActionPerformed

    private void btnFindActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnFindActionPerformed
        GUIArticulosFind instance = new GUIArticulosFind(this, true, articuloService);
        instance.setVisible(true);
    }//GEN-LAST:event_btnFindActionPerformed

    private void btnCategoriasActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCategoriasActionPerformed
        // TODO add your handling code here:
        //CategoryService categoryService = new CategoryService(); // O una instancia ya creada
    GUIArticulos guiArticulos= new GUIArticulos( articuloService); // Pasar el servicio
    guiArticulos.setVisible(true); // Mostrar la ventana de categorías


    }//GEN-LAST:event_btnCategoriasActionPerformed

    private void txtPalabrasActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtPalabrasActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtPalabrasActionPerformed

    private void txtArchivoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtArchivoActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtArchivoActionPerformed

    private void btnCargarArchivoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCargarArchivoActionPerformed
       JFileChooser fileChooser = new JFileChooser();
        fileChooser.setDialogTitle("Seleccionar archivo PDF");
        fileChooser.setFileFilter(new FileNameExtensionFilter("Archivos PDF", "pdf"));

        int resultado = fileChooser.showOpenDialog(this);

        if (resultado == JFileChooser.APPROVE_OPTION) {
            selectedPdfFile = fileChooser.getSelectedFile();
            String rutaArchivo = selectedPdfFile.getAbsolutePath();
            txtArchivo.setText(rutaArchivo);

            // Opcional: Mostrar el PDF
            try {
                Desktop.getDesktop().open(selectedPdfFile);
            } catch (IOException e) {
                e.printStackTrace();
                JOptionPane.showMessageDialog(this, "No se pudo abrir el archivo PDF", "Error", JOptionPane.ERROR_MESSAGE);
            }
        }
    }//GEN-LAST:event_btnCargarArchivoActionPerformed

    private void txtIdAutorActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtIdAutorActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtIdAutorActionPerformed

    private void txtIdConferenciaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtIdConferenciaActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtIdConferenciaActionPerformed
    private void stateEdit() {
        btnNuevo.setVisible(false);
        btnEditar.setVisible(false);
        btnEliminar.setVisible(true);
        btnCancelar.setVisible(true);
        btnCerrar.setVisible(false);
        btnSave.setVisible(true);
        btnFind.setVisible(false);
        txtId.setEnabled(true);
        txtTitulo.setEnabled(true);
        txtResumen.setEnabled(true);
        txtIdConferencia.setEnabled(true);
        txtIdAutor.setEnabled(true);
        txtPalabras.setEnabled(true);

    }

    private void stateInitial() {
        btnNuevo.setVisible(true);
        btnEditar.setVisible(true);
        btnEliminar.setVisible(false);
        btnCancelar.setVisible(false);
        btnCerrar.setVisible(true);
        btnSave.setVisible(false);
        btnFind.setVisible(true);
        txtId.setEnabled(false);
        txtTitulo.setEnabled(false);
        txtResumen.setEnabled(false);
        txtPalabras.setEnabled(false);
        txtIdConferencia.setEnabled(false);
        txtIdAutor.setEnabled(false);

    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnCancelar;
    private javax.swing.JButton btnCargarArchivo;
    private javax.swing.JButton btnCategorias;
    private javax.swing.JButton btnCerrar;
    private javax.swing.JButton btnEditar;
    private javax.swing.JButton btnEliminar;
    private javax.swing.JButton btnFind;
    private javax.swing.JButton btnNuevo;
    private javax.swing.JButton btnSave;
    private javax.swing.JFileChooser jFileChooser1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JPanel pnlCenter;
    private javax.swing.JPanel pnlSouth;
    private javax.swing.JTextField txtArchivo;
    private javax.swing.JTextField txtId;
    private javax.swing.JTextField txtIdAutor;
    private javax.swing.JTextField txtIdConferencia;
    private javax.swing.JTextField txtPalabras;
    private javax.swing.JTextArea txtResumen;
    private javax.swing.JTextField txtTitulo;
    // End of variables declaration//GEN-END:variables

    private void stateNew() {
        btnNuevo.setVisible(false);
        btnEditar.setVisible(false);
        btnEliminar.setVisible(false);
        btnCancelar.setVisible(true);
        btnCerrar.setVisible(false);
        btnSave.setVisible(true);
        btnFind.setVisible(false);
        txtId.setEnabled(false);
        txtTitulo.setEnabled(true);
        txtResumen.setEnabled(true);
        txtIdConferencia.setEnabled(true);
        txtIdAutor.setEnabled(true);
        txtPalabras.setEnabled(true);

    }

    private void cleanControls() {
    txtId.setText("");
        txtTitulo.setText("");
        txtResumen.setText("");
        txtPalabras.setText("");
        txtIdConferencia.setText("");
        txtIdAutor.setText("");
        txtArchivo.setText("");
        selectedPdfFile = null;

    }


private void addArticulo() {
  
        if (selectedPdfFile == null || !selectedPdfFile.exists()) {
            JOptionPane.showMessageDialog(this, "Debe seleccionar un archivo PDF válido.", "Error", JOptionPane.ERROR_MESSAGE);
            return;
        }

        String titulo = txtTitulo.getText().trim();
        String resumen = txtResumen.getText().trim();
        String palabrasClave = txtPalabras.getText().trim();
        Long autorId = null;
        Long conferenciaId = null;

        try {
            autorId = Long.parseLong(txtIdAutor.getText().trim());
            conferenciaId = Long.parseLong(txtIdConferencia.getText().trim());
        } catch (NumberFormatException e) {
            JOptionPane.showMessageDialog(this, "Los IDs de autor y conferencia deben ser números válidos.", "Error", JOptionPane.ERROR_MESSAGE);
            return;
        }
        System.out.println("archivo:"+selectedPdfFile.getName());
        boolean isSaved = articuloService.saveArticulo(titulo, resumen, palabrasClave, autorId, conferenciaId, selectedPdfFile);

        if (isSaved) {
            JOptionPane.showMessageDialog(this, "El artículo se ha guardado exitosamente.", "Éxito", JOptionPane.INFORMATION_MESSAGE);
            cleanControls();
            stateInitial();
        } else {
            JOptionPane.showMessageDialog(this, "Hubo un problema al guardar el artículo.", "Error", JOptionPane.ERROR_MESSAGE);
        }
}






private void editArticulo() {
   if (selectedPdfFile == null || !selectedPdfFile.exists()) {
            JOptionPane.showMessageDialog(this, "Debe seleccionar un archivo PDF válido.", "Error", JOptionPane.ERROR_MESSAGE);
            return;
        }

        Long articuloId = Long.parseLong(txtId.getText().trim());
        String titulo = txtTitulo.getText().trim();
        String resumen = txtResumen.getText().trim();
        String palabrasClave = txtPalabras.getText().trim();
        Long autorId = null;
        Long conferenciaId = null;

        try {
            autorId = Long.parseLong(txtIdAutor.getText().trim());
            conferenciaId = Long.parseLong(txtIdConferencia.getText().trim());
        } catch (NumberFormatException e) {
            JOptionPane.showMessageDialog(this, "Los IDs de autor y conferencia deben ser números válidos.", "Error", JOptionPane.ERROR_MESSAGE);
            return;
        }

        Articulo articulo = new Articulo();
        articulo.setTitulo(titulo);
        articulo.setResumen(resumen);
        articulo.setPalabrasClave(palabrasClave);
        articulo.setAutorId(autorId);
        articulo.setConferenciaId(conferenciaId);

        boolean isUpdated = articuloService.editArticulo(articuloId, articulo, selectedPdfFile);
        if (isUpdated) {
            JOptionPane.showMessageDialog(this, "Artículo actualizado con éxito", "Éxito", JOptionPane.INFORMATION_MESSAGE);
            cleanControls();
            stateInitial();
        } else {
            JOptionPane.showMessageDialog(this, "Error al actualizar el artículo", "Error", JOptionPane.ERROR_MESSAGE);
        }
}




}
