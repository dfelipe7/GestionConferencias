package co.com.events.presentation;

import co.com.events.domain.access.RolRepositorio;
import co.com.events.domain.entities.Evento;
import co.com.events.domain.entities.Rol;
import co.com.events.domain.entities.Usuario;
import co.com.events.service.CategoryService;
import co.com.events.service.EventService;
import co.com.events.service.RolService;
import co.com.events.service.UsuarioService;
import java.util.List;

import javax.swing.JOptionPane;

/**
 *
 * @author Libardo Pantoja, Julio A. Hurtado
 */
public class GUIUsuarios extends javax.swing.JFrame {

    private RolService rolService;
    private UsuarioService usuarioService;

    private boolean addOption;

    /**
     * Creates new form GUIProducts
     */
    public GUIUsuarios(UsuarioService usuarioService,RolService rolService) {
        initComponents();
        this.rolService = rolService;
        this.usuarioService = usuarioService;
        llenarComboBoxRoles();

        stateInitial();

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        pnlSouth = new javax.swing.JPanel();
        btnNuevo = new javax.swing.JButton();
        btnEditar = new javax.swing.JButton();
        btnSave = new javax.swing.JButton();
        btnCancelar = new javax.swing.JButton();
        btnEliminar = new javax.swing.JButton();
        btnFind = new javax.swing.JButton();
        btnCerrar = new javax.swing.JButton();
        btnCategorias = new javax.swing.JButton();
        pnlCenter = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        txtId = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        txtUsuario = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        txtCorreo = new javax.swing.JTextArea();
        txtContrasenia = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        cbxRol = new javax.swing.JComboBox<>();
        button1 = new java.awt.Button();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Productos");

        pnlSouth.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));

        btnNuevo.setText("Nuevo");
        btnNuevo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnNuevoActionPerformed(evt);
            }
        });
        pnlSouth.add(btnNuevo);

        btnEditar.setText("Editar");
        btnEditar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEditarActionPerformed(evt);
            }
        });
        pnlSouth.add(btnEditar);

        btnSave.setText("Grabar");
        btnSave.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSaveActionPerformed(evt);
            }
        });
        pnlSouth.add(btnSave);

        btnCancelar.setText("Cancelar");
        btnCancelar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCancelarActionPerformed(evt);
            }
        });
        pnlSouth.add(btnCancelar);

        btnEliminar.setText("Eliminar");
        btnEliminar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEliminarActionPerformed(evt);
            }
        });
        pnlSouth.add(btnEliminar);

        btnFind.setText("Buscar");
        btnFind.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnFindActionPerformed(evt);
            }
        });
        pnlSouth.add(btnFind);

        btnCerrar.setText("Cerrar");
        btnCerrar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCerrarActionPerformed(evt);
            }
        });
        pnlSouth.add(btnCerrar);

        btnCategorias.setText("Categorias");
        btnCategorias.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCategoriasActionPerformed(evt);
            }
        });
        pnlSouth.add(btnCategorias);

        getContentPane().add(pnlSouth, java.awt.BorderLayout.SOUTH);

        pnlCenter.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel1.setText("*Id:");

        txtId.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                txtIdFocusLost(evt);
            }
        });

        jLabel2.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel2.setText("Usuario:");

        jLabel3.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel3.setText("Correo:");

        txtCorreo.setColumns(20);
        txtCorreo.setRows(5);
        jScrollPane1.setViewportView(txtCorreo);

        txtContrasenia.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtContraseniaActionPerformed(evt);
            }
        });

        jLabel5.setText("Contrase√±a:");

        jLabel7.setText("Rol:");

        cbxRol.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        cbxRol.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cbxRolActionPerformed(evt);
            }
        });

        button1.setLabel("button1");

        javax.swing.GroupLayout pnlCenterLayout = new javax.swing.GroupLayout(pnlCenter);
        pnlCenter.setLayout(pnlCenterLayout);
        pnlCenterLayout.setHorizontalGroup(
            pnlCenterLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pnlCenterLayout.createSequentialGroup()
                .addGroup(pnlCenterLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(pnlCenterLayout.createSequentialGroup()
                        .addGroup(pnlCenterLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 318, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel5))
                        .addGap(6, 6, 6)
                        .addGroup(pnlCenterLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(txtContrasenia, javax.swing.GroupLayout.PREFERRED_SIZE, 324, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 318, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(pnlCenterLayout.createSequentialGroup()
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(pnlCenterLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(pnlCenterLayout.createSequentialGroup()
                                .addComponent(jLabel7)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(cbxRol, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(252, 252, 252))
                            .addGroup(pnlCenterLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                .addGroup(javax.swing.GroupLayout.Alignment.LEADING, pnlCenterLayout.createSequentialGroup()
                                    .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 318, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                    .addComponent(txtUsuario))
                                .addGroup(javax.swing.GroupLayout.Alignment.LEADING, pnlCenterLayout.createSequentialGroup()
                                    .addComponent(button1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                    .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 318, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                    .addComponent(txtId, javax.swing.GroupLayout.PREFERRED_SIZE, 318, javax.swing.GroupLayout.PREFERRED_SIZE))))))
                .addGap(17, 17, 17))
        );
        pnlCenterLayout.setVerticalGroup(
            pnlCenterLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlCenterLayout.createSequentialGroup()
                .addGap(1, 1, 1)
                .addGroup(pnlCenterLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(pnlCenterLayout.createSequentialGroup()
                        .addGap(6, 6, 6)
                        .addComponent(txtId))
                    .addComponent(button1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(pnlCenterLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtUsuario, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(pnlCenterLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                    .addComponent(jLabel3, javax.swing.GroupLayout.DEFAULT_SIZE, 23, Short.MAX_VALUE))
                .addGap(18, 18, 18)
                .addGroup(pnlCenterLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel5)
                    .addComponent(txtContrasenia, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(pnlCenterLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel7)
                    .addComponent(cbxRol, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(77, 77, 77))
        );

        getContentPane().add(pnlCenter, java.awt.BorderLayout.CENTER);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnNuevoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnNuevoActionPerformed
         stateNew();
        txtUsuario.requestFocus();
        addOption = true;
    }//GEN-LAST:event_btnNuevoActionPerformed

    private void btnCancelarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCancelarActionPerformed
        stateInitial();
        cleanControls();
    }//GEN-LAST:event_btnCancelarActionPerformed

    private void btnCerrarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCerrarActionPerformed
        this.dispose();
    }//GEN-LAST:event_btnCerrarActionPerformed

    private void btnSaveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSaveActionPerformed
        if (txtUsuario.getText().trim().equals("")) {
            Messages.showMessageDialog("Debe ingresar el nombre del producto", "Atenci√≥n");
            txtUsuario.requestFocus();
            return;
        }
        if (addOption) {
            //Agregar
            addUsuario();

        } else {
            //Editar
            editUsuario();
        }

    }//GEN-LAST:event_btnSaveActionPerformed

    private void btnEditarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEditarActionPerformed
        addOption = false;
        stateEdit();
        txtId.requestFocus();
    }//GEN-LAST:event_btnEditarActionPerformed

    private void txtIdFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtIdFocusLost
      if (txtId.getText().trim().equals("")) {
        return;
    }
      
      
    Long usuarioId = null;
    try {
        usuarioId = Long.parseLong(txtId.getText().trim());
    } catch (NumberFormatException e) {
        Messages.showMessageDialog("El ID del usuario debe ser un n√∫mero v√°lido.", "Error");
        txtId.setText("");
        txtId.requestFocus();
        return;
    }
    
    Usuario usuario= usuarioService.findById(usuarioId);
    
    if (usuario== null) {
        Messages.showMessageDialog("El identificador del producto no existe", "Error");
        txtId.setText("");
        txtId.requestFocus();
    } else {
        txtUsuario.setText(usuario.getUsername());
        txtCorreo.setText(usuario.getEmail());
        txtContrasenia.setText(usuario.getPassword());
        // Mostrar el ID de la categor√≠a como texto en el JTextField
        //Long categoryId = evento.getCategoryId()!= null ? evento.getCategoryId() : null;
       // txtCategoria.setText(categoryId != null ? categoryId.toString() : "");
    }
    }//GEN-LAST:event_txtIdFocusLost

    private void btnEliminarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEliminarActionPerformed
        String id = txtId.getText().trim();
        if (id.equals("")) {
            Messages.showMessageDialog("Debe buscar el producto a eliminar", "Atenci√≥n");
            txtId.requestFocus();
            return;
        }
        Long usuarioId = Long.parseLong(id);
        if (Messages.showConfirmDialog("Est√° seguro que desea eliminar este producto?", "Confirmaci√≥n") == JOptionPane.YES_NO_OPTION) {
            if (usuarioService.delete(usuarioId)) {
                Messages.showMessageDialog("Producto eliminado con √©xito", "Atenci√≥n");
                stateInitial();
                cleanControls();
            }
        }
    }//GEN-LAST:event_btnEliminarActionPerformed

    private void btnFindActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnFindActionPerformed
        GUIUsuariosFind instance = new GUIUsuariosFind(this, true, usuarioService, rolService);
        instance.setVisible(true);
    }//GEN-LAST:event_btnFindActionPerformed

    private void btnCategoriasActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCategoriasActionPerformed
        // TODO add your handling code here:
        //CategoryService categoryService = new CategoryService(); // O una instancia ya creada
  //  GUICategories guiCategories = new GUICategories( categoryService); // Pasar el servicio
    //guiCategories.setVisible(true); // Mostrar la ventana de categor√≠as


    }//GEN-LAST:event_btnCategoriasActionPerformed

    private void txtContraseniaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtContraseniaActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtContraseniaActionPerformed

    private void cbxRolActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cbxRolActionPerformed


    }//GEN-LAST:event_cbxRolActionPerformed
   private void formWindowOpened(java.awt.event.WindowEvent evt) {                                
    // Llenar el JComboBox con los roles cuando se abra el JFrame
    llenarComboBoxRoles();
}

    private void llenarComboBoxRoles() {
    RolRepositorio rolRepository = new RolRepositorio();
    List<Rol> roles = rolRepository.findAll();

    cbxRol.removeAllItems(); // Limpiar el JComboBox
    for (Rol rol : roles) {
        System.out.println("roles:"+rol.getRoleName());
        cbxRol.addItem(rol.getRoleName()); // Agregar cada rol por su nombre
    }
}

    private void stateEdit() {
        btnNuevo.setVisible(false);
        btnEditar.setVisible(false);
        btnEliminar.setVisible(true);
        btnCancelar.setVisible(true);
        btnCerrar.setVisible(false);
        btnSave.setVisible(true);
        btnFind.setVisible(false);
        txtId.setEnabled(true);
        txtUsuario.setEnabled(true);
        txtCorreo.setEnabled(true);
    }

    private void stateInitial() {
        btnNuevo.setVisible(true);
        btnEditar.setVisible(true);
        btnEliminar.setVisible(false);
        btnCancelar.setVisible(false);
        btnCerrar.setVisible(true);
        btnSave.setVisible(false);
        btnFind.setVisible(true);
        txtId.setEnabled(false);
        txtUsuario.setEnabled(false);
        txtCorreo.setEnabled(false);
        //txtCategoria.setEnabled(false);
        //txtAforo.setEnabled(false);
        txtContrasenia.setEnabled(false);

    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnCancelar;
    private javax.swing.JButton btnCategorias;
    private javax.swing.JButton btnCerrar;
    private javax.swing.JButton btnEditar;
    private javax.swing.JButton btnEliminar;
    private javax.swing.JButton btnFind;
    private javax.swing.JButton btnNuevo;
    private javax.swing.JButton btnSave;
    private java.awt.Button button1;
    private javax.swing.JComboBox<String> cbxRol;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JPanel pnlCenter;
    private javax.swing.JPanel pnlSouth;
    private javax.swing.JTextField txtContrasenia;
    private javax.swing.JTextArea txtCorreo;
    private javax.swing.JTextField txtId;
    private javax.swing.JTextField txtUsuario;
    // End of variables declaration//GEN-END:variables

    private void stateNew() {
        btnNuevo.setVisible(false);
        btnEditar.setVisible(false);
        btnEliminar.setVisible(false);
        btnCancelar.setVisible(true);
        btnCerrar.setVisible(false);
        btnSave.setVisible(true);
        btnFind.setVisible(false);
        txtId.setEnabled(false);
        txtUsuario.setEnabled(true);
        txtCorreo.setEnabled(true);
       // txtCategoria.setEnabled(true);
        //txtAforo.setEnabled(true);
        txtContrasenia.setEnabled(true);

    }

    private void cleanControls() {
        txtId.setText("");
        txtUsuario.setText("");
        txtCorreo.setText("");
        txtContrasenia.setText("");
        //txtCategoria.setText("");

    }

private void addUsuario() {
    String name = txtUsuario.getText().trim();
    String correo = txtCorreo.getText().trim();
    String contrasenia = txtContrasenia.getText();

    // Obtener el rol seleccionado del JComboBox
    String rolSeleccionado = (String) cbxRol.getSelectedItem();
    if (rolSeleccionado == null || rolSeleccionado.isEmpty()) {
        Messages.showMessageDialog("Debe seleccionar un rol v√°lido.", "Error");
        return;
    }

    // Buscar el objeto Rol seg√∫n el nombre seleccionado
    Rol rol = rolService.findByName(rolSeleccionado);
    if (rol == null) {
        Messages.showMessageDialog("Rol no v√°lido.", "Error");
        return;
    }

    // Crear el objeto Usuario con los datos ingresados
    Usuario usuario = new Usuario();
    usuario.setUsername(name);
    usuario.setEmail(correo);
    usuario.setPassword(contrasenia);
    usuario.setRole(rol); // Asignar el rol al usuario
    System.out.println("rol:"+rol);
    // Llamar al servicio para guardar el usuario
    if (usuarioService.save(usuario)) {
        Messages.showMessageDialog("Usuario guardado con √©xito", "√âxito");
        cleanControls();
        stateInitial();
    } else {
        Messages.showMessageDialog("Error al guardar el usuario", "Error");
    }
}






private void editUsuario() {
    Long usuarioId;
    try {
        usuarioId = Long.parseLong(txtId.getText().trim());
    } catch (NumberFormatException e) {
        Messages.showMessageDialog("El ID del usuario debe ser un n√∫mero v√°lido.", "Error");
        return;
    }

    String name = txtUsuario.getText().trim();
    String correo = txtCorreo.getText().trim();
    String contrasenia = txtContrasenia.getText().trim();

    // Obtener el rol seleccionado del JComboBox
    String rolSeleccionado = (String) cbxRol.getSelectedItem();
    if (rolSeleccionado == null || rolSeleccionado.isEmpty()) {
        Messages.showMessageDialog("Debe seleccionar un rol v√°lido.", "Error");
        return;
    }

    // Buscar el rol en la base de datos usando RolService
    Rol rol = rolService.findByName(rolSeleccionado);
    if (rol == null) {
        Messages.showMessageDialog("El rol seleccionado no existe en el sistema.", "Error");
        return;
    }

    // Crear un objeto Usuario con los datos actualizados
    Usuario usuario = new Usuario();
    usuario.setUsername(name);
    usuario.setEmail(correo);
    usuario.setPassword(contrasenia);
    usuario.setRole(rol);

    // Llamar al servicio para editar el usuario
    if (usuarioService.edit(usuarioId, usuario)) {
        Messages.showMessageDialog("Usuario actualizado con √©xito", "√âxito");
        cleanControls();
        stateInitial();
    } else {
        Messages.showMessageDialog("Error al actualizar el usuario", "Error");
    }
}



}
